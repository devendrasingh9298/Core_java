/* Write a Java Program in Multiple Threading in Use Sysnchronization */

import java.util.Scanner;

class Account {
    private int bal;
    private int amt;
        public Account(int bal){
            this.bal = bal;
        }
        public boolean isSufficientBalance(int w){
            if(bal > w){
                return (true);
            }else{
                return (false);
            }
        }
            public  void withdraw(int amt) {
                bal = bal-amt;
                System.out.println("Withdraw Money ="+amt);
                System.out.println("Your Current Balance = "+bal);
            }
        }
class Customer implements Runnable{
    private String name;
    private Account act;
        public Customer(Account act,String n){
            this.act = act;
            name = n;
        }
        public void run(){
            Scanner sc = new Scanner(System.in);
            System.out.println(name+" "+"Enter Withdraw Amount");
            int amt = sc.nextInt();
            synchronized (act){
                if(act.isSufficientBalance(amt)){
                    System.out.println(name);
                    act.withdraw(amt);
                }else{
                    System.out.println("inSufficient Balance ");
                }
            } 
        }
    }
        class threadTest{
            public static void main(String[] args) {
                Account a1 = new Account(1000);
                Account a2 = new Account(5000);

                Customer  c1 = new Customer(a1, "Devendra");               
                Thread t1 = new Thread(c1);              
                t1.start();

                /*if you run Multi customer same time so output mixeup */

                // Customer c2 = new Customer(a2, "Aman");
                // Thread t2 = new Thread(c2);
                // t2.start();
        }
    }
